	component top is
		port (
			clk_clk                       : in  std_logic                     := 'X';             -- clk
			dut_hip_ctrl_test_in          : in  std_logic_vector(31 downto 0) := (others => 'X'); -- test_in
			dut_hip_ctrl_simu_mode_pipe   : in  std_logic                     := 'X';             -- simu_mode_pipe
			dut_hip_pipe_sim_pipe_pclk_in : in  std_logic                     := 'X';             -- sim_pipe_pclk_in
			dut_hip_pipe_sim_pipe_rate    : out std_logic_vector(1 downto 0);                     -- sim_pipe_rate
			dut_hip_pipe_sim_ltssmstate   : out std_logic_vector(4 downto 0);                     -- sim_ltssmstate
			dut_hip_pipe_eidleinfersel0   : out std_logic_vector(2 downto 0);                     -- eidleinfersel0
			dut_hip_pipe_eidleinfersel1   : out std_logic_vector(2 downto 0);                     -- eidleinfersel1
			dut_hip_pipe_eidleinfersel2   : out std_logic_vector(2 downto 0);                     -- eidleinfersel2
			dut_hip_pipe_eidleinfersel3   : out std_logic_vector(2 downto 0);                     -- eidleinfersel3
			dut_hip_pipe_powerdown0       : out std_logic_vector(1 downto 0);                     -- powerdown0
			dut_hip_pipe_powerdown1       : out std_logic_vector(1 downto 0);                     -- powerdown1
			dut_hip_pipe_powerdown2       : out std_logic_vector(1 downto 0);                     -- powerdown2
			dut_hip_pipe_powerdown3       : out std_logic_vector(1 downto 0);                     -- powerdown3
			dut_hip_pipe_rxpolarity0      : out std_logic;                                        -- rxpolarity0
			dut_hip_pipe_rxpolarity1      : out std_logic;                                        -- rxpolarity1
			dut_hip_pipe_rxpolarity2      : out std_logic;                                        -- rxpolarity2
			dut_hip_pipe_rxpolarity3      : out std_logic;                                        -- rxpolarity3
			dut_hip_pipe_txcompl0         : out std_logic;                                        -- txcompl0
			dut_hip_pipe_txcompl1         : out std_logic;                                        -- txcompl1
			dut_hip_pipe_txcompl2         : out std_logic;                                        -- txcompl2
			dut_hip_pipe_txcompl3         : out std_logic;                                        -- txcompl3
			dut_hip_pipe_txdata0          : out std_logic_vector(7 downto 0);                     -- txdata0
			dut_hip_pipe_txdata1          : out std_logic_vector(7 downto 0);                     -- txdata1
			dut_hip_pipe_txdata2          : out std_logic_vector(7 downto 0);                     -- txdata2
			dut_hip_pipe_txdata3          : out std_logic_vector(7 downto 0);                     -- txdata3
			dut_hip_pipe_txdatak0         : out std_logic;                                        -- txdatak0
			dut_hip_pipe_txdatak1         : out std_logic;                                        -- txdatak1
			dut_hip_pipe_txdatak2         : out std_logic;                                        -- txdatak2
			dut_hip_pipe_txdatak3         : out std_logic;                                        -- txdatak3
			dut_hip_pipe_txdetectrx0      : out std_logic;                                        -- txdetectrx0
			dut_hip_pipe_txdetectrx1      : out std_logic;                                        -- txdetectrx1
			dut_hip_pipe_txdetectrx2      : out std_logic;                                        -- txdetectrx2
			dut_hip_pipe_txdetectrx3      : out std_logic;                                        -- txdetectrx3
			dut_hip_pipe_txelecidle0      : out std_logic;                                        -- txelecidle0
			dut_hip_pipe_txelecidle1      : out std_logic;                                        -- txelecidle1
			dut_hip_pipe_txelecidle2      : out std_logic;                                        -- txelecidle2
			dut_hip_pipe_txelecidle3      : out std_logic;                                        -- txelecidle3
			dut_hip_pipe_txswing0         : out std_logic;                                        -- txswing0
			dut_hip_pipe_txswing1         : out std_logic;                                        -- txswing1
			dut_hip_pipe_txswing2         : out std_logic;                                        -- txswing2
			dut_hip_pipe_txswing3         : out std_logic;                                        -- txswing3
			dut_hip_pipe_txmargin0        : out std_logic_vector(2 downto 0);                     -- txmargin0
			dut_hip_pipe_txmargin1        : out std_logic_vector(2 downto 0);                     -- txmargin1
			dut_hip_pipe_txmargin2        : out std_logic_vector(2 downto 0);                     -- txmargin2
			dut_hip_pipe_txmargin3        : out std_logic_vector(2 downto 0);                     -- txmargin3
			dut_hip_pipe_txdeemph0        : out std_logic;                                        -- txdeemph0
			dut_hip_pipe_txdeemph1        : out std_logic;                                        -- txdeemph1
			dut_hip_pipe_txdeemph2        : out std_logic;                                        -- txdeemph2
			dut_hip_pipe_txdeemph3        : out std_logic;                                        -- txdeemph3
			dut_hip_pipe_phystatus0       : in  std_logic                     := 'X';             -- phystatus0
			dut_hip_pipe_phystatus1       : in  std_logic                     := 'X';             -- phystatus1
			dut_hip_pipe_phystatus2       : in  std_logic                     := 'X';             -- phystatus2
			dut_hip_pipe_phystatus3       : in  std_logic                     := 'X';             -- phystatus3
			dut_hip_pipe_rxdata0          : in  std_logic_vector(7 downto 0)  := (others => 'X'); -- rxdata0
			dut_hip_pipe_rxdata1          : in  std_logic_vector(7 downto 0)  := (others => 'X'); -- rxdata1
			dut_hip_pipe_rxdata2          : in  std_logic_vector(7 downto 0)  := (others => 'X'); -- rxdata2
			dut_hip_pipe_rxdata3          : in  std_logic_vector(7 downto 0)  := (others => 'X'); -- rxdata3
			dut_hip_pipe_rxdatak0         : in  std_logic                     := 'X';             -- rxdatak0
			dut_hip_pipe_rxdatak1         : in  std_logic                     := 'X';             -- rxdatak1
			dut_hip_pipe_rxdatak2         : in  std_logic                     := 'X';             -- rxdatak2
			dut_hip_pipe_rxdatak3         : in  std_logic                     := 'X';             -- rxdatak3
			dut_hip_pipe_rxelecidle0      : in  std_logic                     := 'X';             -- rxelecidle0
			dut_hip_pipe_rxelecidle1      : in  std_logic                     := 'X';             -- rxelecidle1
			dut_hip_pipe_rxelecidle2      : in  std_logic                     := 'X';             -- rxelecidle2
			dut_hip_pipe_rxelecidle3      : in  std_logic                     := 'X';             -- rxelecidle3
			dut_hip_pipe_rxstatus0        : in  std_logic_vector(2 downto 0)  := (others => 'X'); -- rxstatus0
			dut_hip_pipe_rxstatus1        : in  std_logic_vector(2 downto 0)  := (others => 'X'); -- rxstatus1
			dut_hip_pipe_rxstatus2        : in  std_logic_vector(2 downto 0)  := (others => 'X'); -- rxstatus2
			dut_hip_pipe_rxstatus3        : in  std_logic_vector(2 downto 0)  := (others => 'X'); -- rxstatus3
			dut_hip_pipe_rxvalid0         : in  std_logic                     := 'X';             -- rxvalid0
			dut_hip_pipe_rxvalid1         : in  std_logic                     := 'X';             -- rxvalid1
			dut_hip_pipe_rxvalid2         : in  std_logic                     := 'X';             -- rxvalid2
			dut_hip_pipe_rxvalid3         : in  std_logic                     := 'X';             -- rxvalid3
			dut_hip_serial_rx_in0         : in  std_logic                     := 'X';             -- rx_in0
			dut_hip_serial_rx_in1         : in  std_logic                     := 'X';             -- rx_in1
			dut_hip_serial_rx_in2         : in  std_logic                     := 'X';             -- rx_in2
			dut_hip_serial_rx_in3         : in  std_logic                     := 'X';             -- rx_in3
			dut_hip_serial_tx_out0        : out std_logic;                                        -- tx_out0
			dut_hip_serial_tx_out1        : out std_logic;                                        -- tx_out1
			dut_hip_serial_tx_out2        : out std_logic;                                        -- tx_out2
			dut_hip_serial_tx_out3        : out std_logic;                                        -- tx_out3
			dut_npor_npor                 : in  std_logic                     := 'X';             -- npor
			dut_npor_pin_perst            : in  std_logic                     := 'X';             -- pin_perst
			dut_refclk_clk                : in  std_logic                     := 'X';             -- clk
			pld_clk_clk                   : out std_logic;                                        -- clk
			reset_reset_n                 : in  std_logic                     := 'X';             -- reset_n
			status_hip_derr_cor_ext_rcv   : out std_logic;                                        -- derr_cor_ext_rcv
			status_hip_derr_cor_ext_rpl   : out std_logic;                                        -- derr_cor_ext_rpl
			status_hip_derr_rpl           : out std_logic;                                        -- derr_rpl
			status_hip_dlup_exit          : out std_logic;                                        -- dlup_exit
			status_hip_ev128ns            : out std_logic;                                        -- ev128ns
			status_hip_ev1us              : out std_logic;                                        -- ev1us
			status_hip_hotrst_exit        : out std_logic;                                        -- hotrst_exit
			status_hip_int_status         : out std_logic_vector(3 downto 0);                     -- int_status
			status_hip_l2_exit            : out std_logic;                                        -- l2_exit
			status_hip_lane_act           : out std_logic_vector(3 downto 0);                     -- lane_act
			status_hip_ltssmstate         : out std_logic_vector(4 downto 0);                     -- ltssmstate
			status_hip_ko_cpl_spc_header  : out std_logic_vector(7 downto 0);                     -- ko_cpl_spc_header
			status_hip_ko_cpl_spc_data    : out std_logic_vector(11 downto 0);                    -- ko_cpl_spc_data
			tl_cfg_tl_cfg_add             : out std_logic_vector(3 downto 0);                     -- tl_cfg_add
			tl_cfg_tl_cfg_ctl             : out std_logic_vector(31 downto 0);                    -- tl_cfg_ctl
			tl_cfg_tl_cfg_sts             : out std_logic_vector(52 downto 0)                     -- tl_cfg_sts
		);
	end component top;

